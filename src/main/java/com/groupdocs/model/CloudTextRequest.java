/*
 * GroupDocs.Rewriter API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 25.7.0
 * Contact: anton.perhunov@aspose.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.groupdocs.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.groupdocs.JSON;

/**
 * CloudTextRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-18T14:46:11.043203+03:00[Europe/Moscow]", comments = "Generator version: 7.14.0")
public class CloudTextRequest {
  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private Integer language;

  public static final String SERIALIZED_NAME_HANDLER = "handler";
  @SerializedName(SERIALIZED_NAME_HANDLER)
  @javax.annotation.Nullable
  private String handler;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  @javax.annotation.Nullable
  private String text;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  @javax.annotation.Nullable
  private String action;

  public static final String SERIALIZED_NAME_JOBOFFERURL = "jobofferurl";
  @SerializedName(SERIALIZED_NAME_JOBOFFERURL)
  @javax.annotation.Nullable
  private String jobofferurl;

  public static final String SERIALIZED_NAME_CVURL = "cvurl";
  @SerializedName(SERIALIZED_NAME_CVURL)
  @javax.annotation.Nullable
  private String cvurl;

  public static final String SERIALIZED_NAME_WEBPAGEURL = "webpageurl";
  @SerializedName(SERIALIZED_NAME_WEBPAGEURL)
  @javax.annotation.Nullable
  private String webpageurl;

  public static final String SERIALIZED_NAME_COVERLETTERURL = "coverletterurl";
  @SerializedName(SERIALIZED_NAME_COVERLETTERURL)
  @javax.annotation.Nullable
  private String coverletterurl;

  public static final String SERIALIZED_NAME_VIDEOURL = "videourl";
  @SerializedName(SERIALIZED_NAME_VIDEOURL)
  @javax.annotation.Nullable
  private String videourl;

  public static final String SERIALIZED_NAME_TEXTS = "texts";
  @SerializedName(SERIALIZED_NAME_TEXTS)
  @javax.annotation.Nullable
  private List<String> texts = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUGGESTIONS = "suggestions";
  @SerializedName(SERIALIZED_NAME_SUGGESTIONS)
  @javax.annotation.Nullable
  private Integer suggestions;

  public static final String SERIALIZED_NAME_DIVERSITY = "diversity";
  @SerializedName(SERIALIZED_NAME_DIVERSITY)
  @javax.annotation.Nullable
  private Integer diversity;

  public static final String SERIALIZED_NAME_TOKENIZE = "tokenize";
  @SerializedName(SERIALIZED_NAME_TOKENIZE)
  @javax.annotation.Nullable
  private Boolean tokenize;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  @javax.annotation.Nullable
  private String origin;

  public static final String SERIALIZED_NAME_ORIGINALTEXT = "originaltext";
  @SerializedName(SERIALIZED_NAME_ORIGINALTEXT)
  @javax.annotation.Nullable
  private String originaltext;

  public static final String SERIALIZED_NAME_ALTERNATIVETEXT = "alternativetext";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVETEXT)
  @javax.annotation.Nullable
  private String alternativetext;

  public static final String SERIALIZED_NAME_DETECTLANGUAGE = "detectlanguage";
  @SerializedName(SERIALIZED_NAME_DETECTLANGUAGE)
  @javax.annotation.Nullable
  private Boolean detectlanguage;

  public static final String SERIALIZED_NAME_ESSAYURL = "essayurl";
  @SerializedName(SERIALIZED_NAME_ESSAYURL)
  @javax.annotation.Nullable
  private String essayurl;

  public static final String SERIALIZED_NAME_GRADING_SCALE = "gradingScale";
  @SerializedName(SERIALIZED_NAME_GRADING_SCALE)
  @javax.annotation.Nullable
  private Integer gradingScale;

  public static final String SERIALIZED_NAME_REQUEST_ID = "requestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  @javax.annotation.Nullable
  private String requestId;

  public static final String SERIALIZED_NAME_USER_EMAIL = "userEmail";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  @javax.annotation.Nullable
  private String userEmail;

  public CloudTextRequest() {
  }

  public CloudTextRequest language(@javax.annotation.Nullable Integer language) {
    this.language = language;
    return this;
  }

  /**
   * Language of original text
   * @return language
   */
  @javax.annotation.Nullable
  public Integer getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable Integer language) {
    this.language = language;
  }


  public CloudTextRequest handler(@javax.annotation.Nullable String handler) {
    this.handler = handler;
    return this;
  }

  /**
   * Defines handler in cloud service
   * @return handler
   */
  @javax.annotation.Nullable
  public String getHandler() {
    return handler;
  }

  public void setHandler(@javax.annotation.Nullable String handler) {
    this.handler = handler;
  }


  public CloudTextRequest text(@javax.annotation.Nullable String text) {
    this.text = text;
    return this;
  }

  /**
   * Text to rewrite
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(@javax.annotation.Nullable String text) {
    this.text = text;
  }


  public CloudTextRequest action(@javax.annotation.Nullable String action) {
    this.action = action;
    return this;
  }

  /**
   * Rewrite or summarize
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(@javax.annotation.Nullable String action) {
    this.action = action;
  }


  public CloudTextRequest jobofferurl(@javax.annotation.Nullable String jobofferurl) {
    this.jobofferurl = jobofferurl;
    return this;
  }

  /**
   * Link to job offer
   * @return jobofferurl
   */
  @javax.annotation.Nullable
  public String getJobofferurl() {
    return jobofferurl;
  }

  public void setJobofferurl(@javax.annotation.Nullable String jobofferurl) {
    this.jobofferurl = jobofferurl;
  }


  public CloudTextRequest cvurl(@javax.annotation.Nullable String cvurl) {
    this.cvurl = cvurl;
    return this;
  }

  /**
   * Link to candidates CV
   * @return cvurl
   */
  @javax.annotation.Nullable
  public String getCvurl() {
    return cvurl;
  }

  public void setCvurl(@javax.annotation.Nullable String cvurl) {
    this.cvurl = cvurl;
  }


  public CloudTextRequest webpageurl(@javax.annotation.Nullable String webpageurl) {
    this.webpageurl = webpageurl;
    return this;
  }

  /**
   * URL of web page to generate keywords
   * @return webpageurl
   */
  @javax.annotation.Nullable
  public String getWebpageurl() {
    return webpageurl;
  }

  public void setWebpageurl(@javax.annotation.Nullable String webpageurl) {
    this.webpageurl = webpageurl;
  }


  public CloudTextRequest coverletterurl(@javax.annotation.Nullable String coverletterurl) {
    this.coverletterurl = coverletterurl;
    return this;
  }

  /**
   * Link to candidates cover letter
   * @return coverletterurl
   */
  @javax.annotation.Nullable
  public String getCoverletterurl() {
    return coverletterurl;
  }

  public void setCoverletterurl(@javax.annotation.Nullable String coverletterurl) {
    this.coverletterurl = coverletterurl;
  }


  public CloudTextRequest videourl(@javax.annotation.Nullable String videourl) {
    this.videourl = videourl;
    return this;
  }

  /**
   * Link to video
   * @return videourl
   */
  @javax.annotation.Nullable
  public String getVideourl() {
    return videourl;
  }

  public void setVideourl(@javax.annotation.Nullable String videourl) {
    this.videourl = videourl;
  }


  public CloudTextRequest texts(@javax.annotation.Nullable List<String> texts) {
    this.texts = texts;
    return this;
  }

  public CloudTextRequest addTextsItem(String textsItem) {
    if (this.texts == null) {
      this.texts = new ArrayList<>();
    }
    this.texts.add(textsItem);
    return this;
  }

  /**
   * Text array to rewrite
   * @return texts
   */
  @javax.annotation.Nullable
  public List<String> getTexts() {
    return texts;
  }

  public void setTexts(@javax.annotation.Nullable List<String> texts) {
    this.texts = texts;
  }


  public CloudTextRequest suggestions(@javax.annotation.Nullable Integer suggestions) {
    this.suggestions = suggestions;
    return this;
  }

  /**
   * Number of suggested variants, 3 maximum
   * @return suggestions
   */
  @javax.annotation.Nullable
  public Integer getSuggestions() {
    return suggestions;
  }

  public void setSuggestions(@javax.annotation.Nullable Integer suggestions) {
    this.suggestions = suggestions;
  }


  public CloudTextRequest diversity(@javax.annotation.Nullable Integer diversity) {
    this.diversity = diversity;
    return this;
  }

  /**
   * Diversity of text
   * @return diversity
   */
  @javax.annotation.Nullable
  public Integer getDiversity() {
    return diversity;
  }

  public void setDiversity(@javax.annotation.Nullable Integer diversity) {
    this.diversity = diversity;
  }


  public CloudTextRequest tokenize(@javax.annotation.Nullable Boolean tokenize) {
    this.tokenize = tokenize;
    return this;
  }

  /**
   * Should source and target texts be returned in tokenized form
   * @return tokenize
   */
  @javax.annotation.Nullable
  public Boolean getTokenize() {
    return tokenize;
  }

  public void setTokenize(@javax.annotation.Nullable Boolean tokenize) {
    this.tokenize = tokenize;
  }


  public CloudTextRequest origin(@javax.annotation.Nullable String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * for analysis only
   * @return origin
   */
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(@javax.annotation.Nullable String origin) {
    this.origin = origin;
  }


  public CloudTextRequest originaltext(@javax.annotation.Nullable String originaltext) {
    this.originaltext = originaltext;
    return this;
  }

  /**
   * Original text
   * @return originaltext
   */
  @javax.annotation.Nullable
  public String getOriginaltext() {
    return originaltext;
  }

  public void setOriginaltext(@javax.annotation.Nullable String originaltext) {
    this.originaltext = originaltext;
  }


  public CloudTextRequest alternativetext(@javax.annotation.Nullable String alternativetext) {
    this.alternativetext = alternativetext;
    return this;
  }

  /**
   * Modified text
   * @return alternativetext
   */
  @javax.annotation.Nullable
  public String getAlternativetext() {
    return alternativetext;
  }

  public void setAlternativetext(@javax.annotation.Nullable String alternativetext) {
    this.alternativetext = alternativetext;
  }


  public CloudTextRequest detectlanguage(@javax.annotation.Nullable Boolean detectlanguage) {
    this.detectlanguage = detectlanguage;
    return this;
  }

  /**
   * If language should be auto detected
   * @return detectlanguage
   */
  @javax.annotation.Nullable
  public Boolean getDetectlanguage() {
    return detectlanguage;
  }

  public void setDetectlanguage(@javax.annotation.Nullable Boolean detectlanguage) {
    this.detectlanguage = detectlanguage;
  }


  public CloudTextRequest essayurl(@javax.annotation.Nullable String essayurl) {
    this.essayurl = essayurl;
    return this;
  }

  /**
   * Essay URL
   * @return essayurl
   */
  @javax.annotation.Nullable
  public String getEssayurl() {
    return essayurl;
  }

  public void setEssayurl(@javax.annotation.Nullable String essayurl) {
    this.essayurl = essayurl;
  }


  public CloudTextRequest gradingScale(@javax.annotation.Nullable Integer gradingScale) {
    this.gradingScale = gradingScale;
    return this;
  }

  /**
   * Grading scale of essay note, 10 by default
   * @return gradingScale
   */
  @javax.annotation.Nullable
  public Integer getGradingScale() {
    return gradingScale;
  }

  public void setGradingScale(@javax.annotation.Nullable Integer gradingScale) {
    this.gradingScale = gradingScale;
  }


  public CloudTextRequest requestId(@javax.annotation.Nullable String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Get requestId
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(@javax.annotation.Nullable String requestId) {
    this.requestId = requestId;
  }


  public CloudTextRequest userEmail(@javax.annotation.Nullable String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * Get userEmail
   * @return userEmail
   */
  @javax.annotation.Nullable
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(@javax.annotation.Nullable String userEmail) {
    this.userEmail = userEmail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudTextRequest cloudTextRequest = (CloudTextRequest) o;
    return Objects.equals(this.language, cloudTextRequest.language) &&
        Objects.equals(this.handler, cloudTextRequest.handler) &&
        Objects.equals(this.text, cloudTextRequest.text) &&
        Objects.equals(this.action, cloudTextRequest.action) &&
        Objects.equals(this.jobofferurl, cloudTextRequest.jobofferurl) &&
        Objects.equals(this.cvurl, cloudTextRequest.cvurl) &&
        Objects.equals(this.webpageurl, cloudTextRequest.webpageurl) &&
        Objects.equals(this.coverletterurl, cloudTextRequest.coverletterurl) &&
        Objects.equals(this.videourl, cloudTextRequest.videourl) &&
        Objects.equals(this.texts, cloudTextRequest.texts) &&
        Objects.equals(this.suggestions, cloudTextRequest.suggestions) &&
        Objects.equals(this.diversity, cloudTextRequest.diversity) &&
        Objects.equals(this.tokenize, cloudTextRequest.tokenize) &&
        Objects.equals(this.origin, cloudTextRequest.origin) &&
        Objects.equals(this.originaltext, cloudTextRequest.originaltext) &&
        Objects.equals(this.alternativetext, cloudTextRequest.alternativetext) &&
        Objects.equals(this.detectlanguage, cloudTextRequest.detectlanguage) &&
        Objects.equals(this.essayurl, cloudTextRequest.essayurl) &&
        Objects.equals(this.gradingScale, cloudTextRequest.gradingScale) &&
        Objects.equals(this.requestId, cloudTextRequest.requestId) &&
        Objects.equals(this.userEmail, cloudTextRequest.userEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(language, handler, text, action, jobofferurl, cvurl, webpageurl, coverletterurl, videourl, texts, suggestions, diversity, tokenize, origin, originaltext, alternativetext, detectlanguage, essayurl, gradingScale, requestId, userEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudTextRequest {\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    handler: ").append(toIndentedString(handler)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    jobofferurl: ").append(toIndentedString(jobofferurl)).append("\n");
    sb.append("    cvurl: ").append(toIndentedString(cvurl)).append("\n");
    sb.append("    webpageurl: ").append(toIndentedString(webpageurl)).append("\n");
    sb.append("    coverletterurl: ").append(toIndentedString(coverletterurl)).append("\n");
    sb.append("    videourl: ").append(toIndentedString(videourl)).append("\n");
    sb.append("    texts: ").append(toIndentedString(texts)).append("\n");
    sb.append("    suggestions: ").append(toIndentedString(suggestions)).append("\n");
    sb.append("    diversity: ").append(toIndentedString(diversity)).append("\n");
    sb.append("    tokenize: ").append(toIndentedString(tokenize)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originaltext: ").append(toIndentedString(originaltext)).append("\n");
    sb.append("    alternativetext: ").append(toIndentedString(alternativetext)).append("\n");
    sb.append("    detectlanguage: ").append(toIndentedString(detectlanguage)).append("\n");
    sb.append("    essayurl: ").append(toIndentedString(essayurl)).append("\n");
    sb.append("    gradingScale: ").append(toIndentedString(gradingScale)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("language", "handler", "text", "action", "jobofferurl", "cvurl", "webpageurl", "coverletterurl", "videourl", "texts", "suggestions", "diversity", "tokenize", "origin", "originaltext", "alternativetext", "detectlanguage", "essayurl", "gradingScale", "requestId", "userEmail"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudTextRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudTextRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudTextRequest is not found in the empty JSON string", CloudTextRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudTextRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudTextRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("handler") != null && !jsonObj.get("handler").isJsonNull()) && !jsonObj.get("handler").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `handler` to be a primitive type in the JSON string but got `%s`", jsonObj.get("handler").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("jobofferurl") != null && !jsonObj.get("jobofferurl").isJsonNull()) && !jsonObj.get("jobofferurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobofferurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobofferurl").toString()));
      }
      if ((jsonObj.get("cvurl") != null && !jsonObj.get("cvurl").isJsonNull()) && !jsonObj.get("cvurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cvurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cvurl").toString()));
      }
      if ((jsonObj.get("webpageurl") != null && !jsonObj.get("webpageurl").isJsonNull()) && !jsonObj.get("webpageurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webpageurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webpageurl").toString()));
      }
      if ((jsonObj.get("coverletterurl") != null && !jsonObj.get("coverletterurl").isJsonNull()) && !jsonObj.get("coverletterurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverletterurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverletterurl").toString()));
      }
      if ((jsonObj.get("videourl") != null && !jsonObj.get("videourl").isJsonNull()) && !jsonObj.get("videourl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `videourl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("videourl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("texts") != null && !jsonObj.get("texts").isJsonNull() && !jsonObj.get("texts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `texts` to be an array in the JSON string but got `%s`", jsonObj.get("texts").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      if ((jsonObj.get("originaltext") != null && !jsonObj.get("originaltext").isJsonNull()) && !jsonObj.get("originaltext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originaltext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originaltext").toString()));
      }
      if ((jsonObj.get("alternativetext") != null && !jsonObj.get("alternativetext").isJsonNull()) && !jsonObj.get("alternativetext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternativetext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternativetext").toString()));
      }
      if ((jsonObj.get("essayurl") != null && !jsonObj.get("essayurl").isJsonNull()) && !jsonObj.get("essayurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `essayurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("essayurl").toString()));
      }
      if ((jsonObj.get("requestId") != null && !jsonObj.get("requestId").isJsonNull()) && !jsonObj.get("requestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestId").toString()));
      }
      if ((jsonObj.get("userEmail") != null && !jsonObj.get("userEmail").isJsonNull()) && !jsonObj.get("userEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userEmail").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudTextRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudTextRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudTextRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudTextRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudTextRequest>() {
           @Override
           public void write(JsonWriter out, CloudTextRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudTextRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudTextRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudTextRequest
   * @throws IOException if the JSON string is invalid with respect to CloudTextRequest
   */
  public static CloudTextRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudTextRequest.class);
  }

  /**
   * Convert an instance of CloudTextRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

